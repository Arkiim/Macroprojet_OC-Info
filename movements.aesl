<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="34294" name="thymio-II">var a = 1000 # valeur pour timer où thymio avance
var b = 2300 # valeur pour timer où thymio tourne
var mf = 150 # vitesse lorsque le thymio avance (Moove Forward)
var mt = 200 # vitesse lorsque le thymio tourne (Moove Turn)
var turn = 0 # variable "flag" pour pouvoir avancer après un virage
var c[] = [1,1,1,1,1,0]
var TI  # var définissant quand le test des inputs s'arrête(Test Inputs)
var i # var définissant un élément du tableau C

#*____________
Partie test *#
#Input de télécommande flèche haut c[i] = 1, flèche droite c[i]=2, flèche gauche c[i]=3
i = 0
TI = 0
 while c[i]!= 0 do
	  # si cell du tableau d'inputs est 1,2 ou 3: avance ou tourne; + termine chaque "chemin" avec 0 pour finir et fermer le tableau
	if c[i] == 1
	then
		callsub moove

		i+= 1
		
	elseif c[i] == 2 
	then
		callsub tright
		i+= 1
	elseif c[i] == 3
	then
		callsub tleft
		i+=1
	end
 end


 #le thymio n'execute que la dernière commande pourquoi ? Il check bien toutes les conditions le s'incrémente correctement mais les fonctions ne sont pas appelées

#_____
#Partie Timers
onevent timer0
	if turn == 0  # si le flag pour tourner (turn) est nul , il arrête le mouvement sinon active le 2nd timer, pour avancer d'une case 
	then
		timer.period[0] = 0
		motor.left.target = 0
		motor.right.target = 0	 
	elseif turn == 1 # S'il a tourné, avance d'une case
	then
		timer.period[1]= a
		motor.left.target = mf
		motor.right.target = mf
		turn = 0
	end
	
onevent timer1 #arrête timer0 et timer1
	timer.period[1] = 0
	timer.period[0] = 0
	motor.left.target = 0
	motor.right.target = 0
	turn = 0

#Partie mouvement

onevent button.forward
callsub moove

onevent button.right
callsub tright

onevent button.left
callsub tleft

#Partie fonctions
sub moove # fait avancer le thymio d'une case
	timer.period[0]= a
	motor.left.target = mf
	motor.right.target = mf

sub tright # fait tourner le thymio a droite puis "active" turn
	timer.period[0] = b
	motor.left.target = mt
	motor.right.target = 0
	turn = 1	
	
	
sub tleft # fait tourner le thymio a gauche
	timer.period[0] = b
	motor.left.target = 0
	motor.right.target = mt
	turn = 1
	
</node>


</network>
